{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\Final Project\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\Final Project\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\Final Project\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\Final Project\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\Final Project\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\Final Project\\\\FrontEnd\\\\frontend\\\\src\\\\Resources\\\\JSX\\\\Login.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormControl } from 'react-bootstrap';\nimport axios from 'axios/index';\nimport { Formik } from 'formik/dist/index';\nimport * as yup from 'yup';\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\nvar schema = yup.object().shape({\n  email: yup.string(),\n  password: yup.string()\n});\n\nvar chsubmit = function chsubmit(val) {\n  // console.log(\"sachin\");\n  // console.log(val);\n  var ur = \"http://localhost:5000/user/\" + val.email + \"/\" + val.password;\n\n  try {\n    axios.get(ur).then(function (res) {\n      // console.log(\"sachin2   \"+ur);\n      //.data=null || res.data==undefined||res.data.length==0\n      console.log(res);\n\n      if (res.status == 404) {\n        alert(\"email and password incorrect\");\n        window.location.reload();\n      } else {\n        var user = res.data.data[0];\n        console.log(user);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        window.location.reload();\n      } // let w = localStorage.getItem(\"user\");\n      // console.log(\"sachin2   \"+ur);\n      // console.log( JSON.parse(w));\n\n    }).catch(function (error) {\n      // console.log('v');\n      console.log(error.response);\n      alert(\"email and password incorrect\");\n      window.location.reload();\n    });\n  } catch (e) {\n    // console.log('c');\n    console.log(e);\n  }\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Formik, {\n        validationSchema: schema,\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              resetForm = _ref.resetForm;\n          setTimeout(function () {\n            // console.log(JSON.stringify(values, null, 2));\n            // console.log(values);\n            chsubmit(values);\n            resetForm({});\n            setSubmitting(true); // console.log(\"sachin3\");\n            // var result = localStorage.getItem(\"user\");\n            // console.log(result);\n          }, 500);\n        },\n        initialValues: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, function (_ref2) {\n        var handleSubmit = _ref2.handleSubmit,\n            handleChange = _ref2.handleChange,\n            handleBlur = _ref2.handleBlur,\n            values = _ref2.values,\n            setFieldValue = _ref2.setFieldValue,\n            setFieldTouched = _ref2.setFieldTouched,\n            touched = _ref2.touched,\n            isValid = _ref2.isValid,\n            errors = _ref2.errors,\n            resetForm = _ref2.resetForm;\n        return React.createElement(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          type: \"email\",\n          placeholder: \"Email\",\n          className: \"mr-sm-2\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleChange,\n          isInvalid: !!errors.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(FormControl, {\n          type: \"password\",\n          placeholder: \"Password\",\n          className: \"mr-sm-2\",\n          name: \"password\",\n          value: values.password,\n          onChange: handleChange,\n          isValid: !!errors.password,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"LOGIN\"));\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["C:\\Users\\NADUNI RANASINGHE\\Desktop\\Final Project\\FrontEnd\\frontend\\src\\Resources\\JSX\\Login.jsx"],"names":["React","Component","Button","Form","FormControl","axios","Formik","yup","schema","object","shape","email","string","password","chsubmit","val","ur","get","then","res","console","log","status","alert","window","location","reload","user","data","localStorage","setItem","JSON","stringify","catch","error","response","e","Login","values","setSubmitting","resetForm","setTimeout","handleSubmit","handleChange","handleBlur","setFieldValue","setFieldTouched","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Form, FormControl} from 'react-bootstrap';\r\n\r\nimport axios from 'axios/index';\r\nimport {Formik} from 'formik/dist/index';\r\nimport * as yup from 'yup';\r\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string(),\r\n    password: yup.string()\r\n\r\n});\r\n\r\nconst chsubmit = function (val) {\r\n    // console.log(\"sachin\");\r\n    // console.log(val);\r\n\r\n    let ur = \"http://localhost:5000/user/\" + val.email + \"/\" + val.password;\r\n\r\n\r\n    try {\r\n\r\n        axios.get(ur).then(res => {\r\n            // console.log(\"sachin2   \"+ur);\r\n//.data=null || res.data==undefined||res.data.length==0\r\n            console.log(res);\r\n            if (res.status == 404) {\r\n                alert(\"email and password incorrect\");\r\n                window.location.reload();\r\n            } else {\r\n                let user = res.data.data[0];\r\n                console.log(user);\r\n                localStorage.setItem(\"user\", JSON.stringify(user));\r\n                window.location.reload();\r\n            }\r\n\r\n            // let w = localStorage.getItem(\"user\");\r\n            // console.log(\"sachin2   \"+ur);\r\n            // console.log( JSON.parse(w));\r\n\r\n\r\n        }).catch((error) => {\r\n            // console.log('v');\r\n            console.log(error.response);\r\n            alert(\"email and password incorrect\");\r\n            window.location.reload();\r\n        });\r\n\r\n    } catch (e) {\r\n        // console.log('c');\r\n        console.log(e);\r\n    }\r\n};\r\n\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <Formik\r\n                validationSchema={schema}\r\n                onSubmit={(values, {setSubmitting, resetForm}) => {\r\n\r\n\r\n                    setTimeout(() => {\r\n                        // console.log(JSON.stringify(values, null, 2));\r\n                        // console.log(values);\r\n                        chsubmit(values);\r\n                        resetForm({});\r\n                        setSubmitting(true);\r\n                        // console.log(\"sachin3\");\r\n                        // var result = localStorage.getItem(\"user\");\r\n                        // console.log(result);\r\n                    }, 500);\r\n                }}\r\n                initialValues={{}}\r\n            >\r\n                {({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      setFieldValue,\r\n                      setFieldTouched,\r\n                      touched,\r\n                      isValid,\r\n                      errors,\r\n                      resetForm,\r\n                  }) => (\r\n                    <Form noValidate onSubmit={handleSubmit} inline>\r\n\r\n                        <FormControl type=\"email\" placeholder=\"Email\" className=\"mr-sm-2\" name=\"email\"\r\n                                     value={values.email} onChange={handleChange} isInvalid={!!errors.email}/>\r\n                        <FormControl type=\"password\" placeholder=\"Password\" className=\"mr-sm-2\" name=\"password\"\r\n                                     value={values.password} onChange={handleChange} isValid={!!errors.password}/>\r\n                        <Button type=\"submit\" variant=\"outline-primary\">LOGIN</Button>\r\n\r\n\r\n                    </Form>\r\n\r\n                )}\r\n\r\n            </Formik>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}