{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\RESOURCES\\\\FinalProject\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\RESOURCES\\\\FinalProject\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\RESOURCES\\\\FinalProject\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\RESOURCES\\\\FinalProject\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\RESOURCES\\\\FinalProject\\\\FrontEnd\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\NADUNI RANASINGHE\\\\Desktop\\\\RESOURCES\\\\FinalProject\\\\FrontEnd\\\\frontend\\\\src\\\\Resources\\\\JSX\\\\Edituser.jsx\";\nimport React from 'react';\nimport { Button, Col, Form, InputGroup } from \"react-bootstrap\";\nimport \"../CSS/Register.css\";\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from 'react-select';\nvar result2 = localStorage.getItem(\"anyuserid\");\nvar result = localStorage.getItem(\"user\");\nresult = JSON.parse(result);\nvar k = 1;\nvar y = 1;\nvar fname = \"\";\nvar lname = \"\";\nvar mail = \"\";\nvar add = \"\";\nvar pno2 = \"\";\nvar uid = \"\";\n\nif (result2 == null || result2 == undefined) {\n  if (result == null || result == undefined) {\n    k = 1;\n    y = 1;\n  } else {\n    k = result.types.value;\n    y = result.types.value;\n    fname = result.firstName;\n    lname = result.lastName;\n    mail = result.email;\n    add = result.address;\n    pno2 = result.pno;\n  }\n} else {}\n\nvar schema = yup.object().shape({\n  firstName: yup.string().required('Required'),\n  lastName: yup.string().required('Required'),\n  email: yup.string().email().required('Required'),\n  address: yup.string().required('Required'),\n  types: yup.array().min(2, 'chooce type').of(yup.object().shape({\n    value: yup.string().required()\n  })).nullable(),\n  password: yup.string().min(6, 'Password has to be longer than 6 characters!').required('Password is required!'),\n  passwordConfirmation: yup.string().oneOf([yup.ref(\"password\")], 'Passwords are not the same!').required('Password confirmation is required!'),\n  pno: yup.string().required('Required')\n});\n\nvar chsubmit = function chsubmit(val) {\n  // console.log(\"sachin\");\n  // console.log(val);\n  val.editdate = new Date().toLocaleString();\n  val.editby = result._id;\n  val.status = true;\n  console.log(val); //+result._id\n\n  axios.post('http://localhost:5000/user/update/5cc2afdbec8f2465b0793805', val).then(function (res) {\n    return console.log(res.data);\n  });\n};\n\nexport default function Edituser() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    validationSchema: schema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          resetForm = _ref.resetForm;\n      setTimeout(function () {\n        // console.log(JSON.stringify(values, null, 2));\n        // console.log(values);\n        chsubmit(values);\n        resetForm({});\n        setSubmitting(true);\n      }, 500);\n    },\n    initialValues: {\n      firstName: fname,\n      lastName: lname,\n      email: mail,\n      address: add,\n      pno: pno2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        values = _ref2.values,\n        setFieldValue = _ref2.setFieldValue,\n        setFieldTouched = _ref2.setFieldTouched,\n        touched = _ref2.touched,\n        isValid = _ref2.isValid,\n        errors = _ref2.errors,\n        resetForm = _ref2.resetForm;\n    return React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      style: {\n        paddingBottom: '3%',\n        paddingTop: '3%',\n        paddingLeft: '3%',\n        paddingRight: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"First name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"firstName\",\n      value: values.firstName,\n      onChange: handleChange,\n      isValid: touched.firstName && !errors.firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Looks good!\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"lastName\",\n      value: values.lastName,\n      onChange: handleChange,\n      isValid: touched.firstName && !errors.lastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Looks good!\")), React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormikUsername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Email\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"@\")), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"email\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      name: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      isInvalid: !!errors.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, errors.email)))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Address\",\n      name: \"address\",\n      value: values.address,\n      onChange: handleChange,\n      isInvalid: !!errors.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, errors.address)), React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"User Type\"), React.createElement(Type, {\n      value: values.types,\n      onChange: setFieldValue,\n      onBlur: setFieldTouched,\n      error: errors.types,\n      touched: touched.types,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, errors.types)), React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik05\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, errors.bday))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik06\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"077XXXXXXX\",\n      name: \"pno\",\n      value: values.pno,\n      onChange: handleChange,\n      isInvalid: !!errors.pno,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, errors.pno)), React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik07\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      isInvalid: !!errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, errors.password)), React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Password Confirmation\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"passwordConfirmation\",\n      name: \"passwordConfirmation\",\n      value: values.passwordConfirmation,\n      onChange: handleChange,\n      isInvalid: !!errors.passwordConfirmation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, errors.passwordConfirmation))), React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      style: {\n        width: '75%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Submit form\")));\n  }));\n}\n\nvar se = function se() {\n  if (k == 2) {\n    return {\n      value: '2',\n      label: 'Instructor'\n    };\n  } else if (k == 3) {\n    return {\n      value: '3',\n      label: 'Admin'\n    };\n  } else {\n    return {\n      value: '1',\n      label: 'Students'\n    };\n  }\n};\n\nse = se();\n\nvar options = function options() {\n  if (y == 2) {\n    return [{\n      value: '1',\n      label: 'Students'\n    }, {\n      value: '2',\n      label: 'Instructor'\n    }];\n  } else if (y == 3) {\n    return [{\n      value: '1',\n      label: 'Students'\n    }, {\n      value: '2',\n      label: 'Instructor'\n    }, {\n      value: '3',\n      label: 'Admin'\n    }];\n  } else {\n    return [{\n      value: '1',\n      label: 'Students'\n    }];\n  }\n};\n\noptions = options();\n\nvar Type =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Type, _React$Component);\n\n  function Type() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Type);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Type)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (value) {\n      // this is going to call setFieldValue and manually update values.topcis\n      _this.props.onChange('types', value); // console.log(this.props.onChange);\n\n    };\n\n    _this.handleBlur = function () {\n      // this is going to call setFieldTouched and manually update touched.topcis\n      _this.props.onBlur('types', true); // console.log(this.props.onBlur);\n\n    };\n\n    return _this;\n  }\n\n  _createClass(Type, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(Select, {\n        id: \"color\",\n        options: options,\n        multi: true,\n        defaultValue: se,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        value: this.props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), !!this.props.error && this.props.touched && React.createElement(\"div\", {\n        style: {\n          color: 'red',\n          marginTop: '.5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, this.props.error));\n    }\n  }]);\n\n  return Type;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\NADUNI RANASINGHE\\Desktop\\RESOURCES\\FinalProject\\FrontEnd\\frontend\\src\\Resources\\JSX\\Edituser.jsx"],"names":["React","Button","Col","Form","InputGroup","axios","Formik","yup","Select","result2","localStorage","getItem","result","JSON","parse","k","y","fname","lname","mail","add","pno2","uid","undefined","types","value","firstName","lastName","email","address","pno","schema","object","shape","string","required","array","min","of","nullable","password","passwordConfirmation","oneOf","ref","chsubmit","val","editdate","Date","toLocaleString","editby","_id","status","console","log","post","then","res","data","Edituser","values","setSubmitting","resetForm","setTimeout","handleSubmit","handleChange","handleBlur","setFieldValue","setFieldTouched","touched","isValid","errors","paddingBottom","paddingTop","paddingLeft","paddingRight","bday","width","textAlign","se","label","options","Type","props","onChange","onBlur","error","color","marginTop","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Button, Col, Form, InputGroup} from \"react-bootstrap\";\r\nimport \"../CSS/Register.css\";\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Select from 'react-select';\r\n\r\nlet result2 = localStorage.getItem(\"anyuserid\");\r\nlet result = localStorage.getItem(\"user\");\r\nresult = JSON.parse(result);\r\n\r\nlet k = 1;\r\nlet y = 1;\r\n\r\nlet fname = \"\";\r\nlet lname = \"\";\r\nlet mail = \"\";\r\nlet add = \"\";\r\nlet pno2 = \"\";\r\nlet uid = \"\";\r\n\r\n\r\nif (result2 == null || result2 == undefined) {\r\n    if (result == null || result == undefined) {\r\n        k = 1;\r\n        y = 1;\r\n    } else {\r\n        k = result.types.value;\r\n        y = result.types.value;\r\n        fname = result.firstName;\r\n        lname = result.lastName;\r\n        mail = result.email;\r\n        add = result.address;\r\n        pno2 = result.pno;\r\n    }\r\n} else {\r\n\r\n\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().required('Required'),\r\n    lastName: yup.string().required('Required'),\r\n    email: yup.string().email().required('Required'),\r\n    address: yup.string().required('Required'),\r\n\r\n    types: yup.array()\r\n        .min(2, 'chooce type')\r\n        .of(\r\n            yup.object().shape({\r\n\r\n                value: yup.string().required(),\r\n            })\r\n        ).nullable(),\r\n    password: yup.string()\r\n        .min(6, 'Password has to be longer than 6 characters!')\r\n        .required('Password is required!'),\r\n    passwordConfirmation: yup.string()\r\n        .oneOf([yup.ref(\"password\")], 'Passwords are not the same!')\r\n        .required('Password confirmation is required!'),\r\n    pno: yup.string().required('Required')\r\n\r\n\r\n});\r\n\r\n\r\nconst chsubmit = function (val) {\r\n    // console.log(\"sachin\");\r\n    // console.log(val);\r\n\r\n    val.editdate = new Date().toLocaleString();\r\n    val.editby = result._id;\r\n    val.status = true;\r\n    console.log(val);\r\n    //+result._id\r\n    axios.post('http://localhost:5000/user/update/5cc2afdbec8f2465b0793805', val)\r\n        .then(res => console.log(res.data));\r\n};\r\n\r\nexport default function Edituser() {\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Formik\r\n                validationSchema={schema}\r\n                onSubmit={(values, {setSubmitting, resetForm}) => {\r\n\r\n\r\n                    setTimeout(() => {\r\n                        // console.log(JSON.stringify(values, null, 2));\r\n                        // console.log(values);\r\n                        chsubmit(values);\r\n                        resetForm({});\r\n                        setSubmitting(true);\r\n                    }, 500);\r\n                }}\r\n                initialValues={{\r\n                    firstName: fname,\r\n                    lastName: lname,\r\n                    email: mail,\r\n                    address: add,\r\n                    pno: pno2,\r\n\r\n                }}\r\n            >\r\n                {({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      setFieldValue,\r\n                      setFieldTouched,\r\n                      touched,\r\n                      isValid,\r\n                      errors,\r\n                      resetForm,\r\n                  }) => (\r\n                    <Form noValidate onSubmit={handleSubmit}\r\n                          style={{paddingBottom: '3%', paddingTop: '3%', paddingLeft: '3%', paddingRight: '3%'}}>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                                <Form.Label>First name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={values.firstName}\r\n                                    onChange={handleChange}\r\n                                    isValid={touched.firstName && !errors.firstName}\r\n                                />\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                                <Form.Label>Last name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={values.lastName}\r\n                                    onChange={handleChange}\r\n                                    isValid={touched.firstName && !errors.lastName}\r\n                                />\r\n\r\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <InputGroup>\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"email\"\r\n                                        aria-describedby=\"inputGroupPrepend\"\r\n                                        name=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n\r\n                                        isInvalid={!!errors.email}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Address\"\r\n                                    name=\"address\"\r\n                                    value={values.address}\r\n                                    onChange={handleChange}\r\n                                    isInvalid={!!errors.address}\r\n                                />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.address}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n                                <Form.Label>User Type</Form.Label>\r\n                                {/* <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"State\"\r\n                                name=\"state\"\r\n                                value={values.state}\r\n                                onChange={handleChange}\r\n                                isInvalid={!!errors.state}\r\n                            />*/}\r\n                                <Type\r\n                                    value={values.types}\r\n                                    onChange={setFieldValue}\r\n                                    onBlur={setFieldTouched}\r\n                                    error={errors.types}\r\n                                    touched={touched.types}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.types}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.bday}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik06\">\r\n                                <Form.Label>Phone Number</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"077XXXXXXX\"\r\n                                    name=\"pno\"\r\n                                    value={values.pno}\r\n                                    onChange={handleChange}\r\n                                    isInvalid={!!errors.pno}\r\n                                />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.pno}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik07\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"password\"\r\n                                    name=\"password\"\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                    isInvalid={!!errors.password}\r\n                                />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.password}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik08\">\r\n                                <Form.Label>Password Confirmation</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"passwordConfirmation\"\r\n                                    name=\"passwordConfirmation\"\r\n                                    value={values.passwordConfirmation}\r\n                                    onChange={handleChange}\r\n                                    isInvalid={!!errors.passwordConfirmation}\r\n                                />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.passwordConfirmation}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <div style={{width: '100%', textAlign: 'center'}}>\r\n                            <Button type=\"submit\" style={{width: '75%'}}>Submit form</Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                )}\r\n\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet se = function () {\r\n\r\n    if (k == 2) {\r\n        return {value: '2', label: 'Instructor'};\r\n    } else if (k == 3) {\r\n        return {value: '3', label: 'Admin'};\r\n    } else {\r\n        return {value: '1', label: 'Students'};\r\n    }\r\n};\r\n\r\nse = se();\r\nlet options = function () {\r\n\r\n    if (y == 2) {\r\n        return [\r\n            {value: '1', label: 'Students'},\r\n            {value: '2', label: 'Instructor'},\r\n\r\n\r\n        ];\r\n    } else if (y == 3) {\r\n        return [\r\n            {value: '1', label: 'Students'},\r\n            {value: '2', label: 'Instructor'},\r\n            {value: '3', label: 'Admin'},\r\n\r\n        ];\r\n    } else {\r\n        return [\r\n            {value: '1', label: 'Students'},\r\n\r\n\r\n        ];\r\n    }\r\n};\r\noptions = options();\r\n\r\nclass Type extends React.Component {\r\n\r\n\r\n    handleChange = value => {\r\n        // this is going to call setFieldValue and manually update values.topcis\r\n        this.props.onChange('types', value);\r\n        // console.log(this.props.onChange);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        // this is going to call setFieldTouched and manually update touched.topcis\r\n        this.props.onBlur('types', true);\r\n        // console.log(this.props.onBlur);\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Select\r\n                    id=\"color\"\r\n                    options={options}\r\n                    multi={true}\r\n                    defaultValue={se}\r\n                    onChange={this.handleChange}\r\n                    onBlur={this.handleBlur}\r\n                    value={this.props.value}\r\n                />\r\n                {!!this.props.error &&\r\n                this.props.touched && (\r\n                    <div style={{color: 'red', marginTop: '.5rem'}}>{this.props.error}</div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}